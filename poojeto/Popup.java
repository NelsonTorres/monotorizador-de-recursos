/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poojeto;
import java.lang.Math.*;
import java.util.*;
import java.io.*;
import java.nio.charset.*;
import java.util.concurrent.*;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

/**
 *
 * @author nelson
 */
public class Popup extends javax.swing.JDialog implements Runnable{

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    /**
     * Creates new form Popup
     */
    ConcurrentHashMap<String,Processo> lista;
    Processo p;
    String global=new String();
    String gNome=new String();
    String gPid=new String();
    String gCpu=new String();
    String gMem=new String();
    String gUser=new String();
    int gMode=-1;

    public void enviaString(String s) {
        int i;
        char[] tam= new char[4];
        if(jRadioButton1.isSelected()){
            lista.remove(gPid);
        }
        String str= gPid + "$"+ s+"\n";
        System .out.println("length: "+str.length());
        i=(str.length()/100)%1000;
        tam[0]=(i+"").toString().charAt(0);
        i=(str.length()/10)%100;
        tam[1]=(i+"").toString().charAt(0);
        i=str.length()%10;
        tam[2]=(i+"").toString().charAt(0);
        tam[3]='\0';
        if (jRadioButton2.isSelected()){
            Processo o = lista.get(gPid);
	    o.setDecisao(tam+str);
        }
        try{
            System.out.print(tam);
            System.out.print(str);
            }catch(Exception e){System.out.println("excepção:\n"+e);}
    }

    public void editar(Processo p){
        String pid=p.getPid();
        String nome=p.getNome();
        String cpu=p.getCpu();
        String mem=p.getMem();
        String user=p.getUser();
        String decisao = p.getDecisao();
        int mode= p.getMode();
        
        if(mode==0){
            StringBuilder s= new StringBuilder();
            s.append("o processo ");
            s.append(nome);
            s.append(" está a consumir ");
            s.append(mem);
            s.append("% de Memória.\nQue deseja fazer?");
            global= s.toString();
            }
            else if(mode==1){
            StringBuilder s= new StringBuilder();
            s.append("o processo ");
            s.append(nome);
            s.append(" está a consumir ");
            s.append(cpu);
            s.append("% de Cpu.\nQue deseja fazer?");
            global= s.toString();
            }
        else if(mode==2){
             StringBuilder s= new StringBuilder();
            s.append("o processo ");
            s.append(nome);
            s.append(" está a consumir ");
            s.append(mem);
            s.append("% de Memória e ");
            s.append(cpu);
            s.append("% de Cpu.\nQue deseja fazer?");
            global= s.toString();
            }
        

        gNome=nome;
        gPid=pid;
        gCpu=cpu;
        gMem=mem;
        gUser=user;
        gMode=mode;

    }

    public Popup(javax.swing.JFrame parent, boolean modal,Processo p ,ConcurrentHashMap<String,Processo> lista) {       
        super(parent, modal);
        this.lista=lista;
        editar(p);
        this.p=p;
        initComponents();
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        group = new javax.swing.ButtonGroup();
        group.add(jRadioButton1);
        group.add(jRadioButton2);



        jButton1.addActionListener(new ActionListener()
            {
            public void actionPerformed(ActionEvent e)
                {   
                    enviaString("matar");
                    dispose();
                }});
        jButton2.addActionListener(new ActionListener()
            {
            public void actionPerformed(ActionEvent e)
                {
                    enviaString("ignorar");
                    dispose();
                }
            });

        jButton3.addActionListener(new ActionListener()
            {
            public void actionPerformed(ActionEvent e)
                {
                    //System.out.println("eventOn");
                    enviaString("parar");
                    dispose();
                }
            });



        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jLabel1.setText(global);

        jButton1.setText("matar");
        jButton2.setText("ignorar");
        jButton3.setText("parar");

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("só desta vez");
        jRadioButton2.setText("para sempre");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(48, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2))
                        .addGap(97, 97, 97))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)))
                .addGap(34, 34, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog
    
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
     * @param args the command line arguments
     */
    public void run() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Popup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Popup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Popup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Popup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Popup dialog = new Popup(new javax.swing.JFrame(), true, p,lista);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup group;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
}
